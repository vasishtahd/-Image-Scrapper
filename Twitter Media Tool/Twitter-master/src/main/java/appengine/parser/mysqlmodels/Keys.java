/**
 * This class is generated by jOOQ
 */
package appengine.parser.mysqlmodels;


import appengine.parser.mysqlmodels.tables.Coinstatus;
import appengine.parser.mysqlmodels.tables.Fetcher;
import appengine.parser.mysqlmodels.tables.Fetcherhistory;
import appengine.parser.mysqlmodels.tables.Fromfbpage;
import appengine.parser.mysqlmodels.tables.FromfbpageTofbpage;
import appengine.parser.mysqlmodels.tables.Instagramfollowers;
import appengine.parser.mysqlmodels.tables.Instagramfollowersupdate;
import appengine.parser.mysqlmodels.tables.Instagramlastfetch;
import appengine.parser.mysqlmodels.tables.Instagramunfollowersupdate;
import appengine.parser.mysqlmodels.tables.Optimalupdate;
import appengine.parser.mysqlmodels.tables.Promotefbpage;
import appengine.parser.mysqlmodels.tables.Sockettradearbitary;
import appengine.parser.mysqlmodels.tables.Swiggyevents;
import appengine.parser.mysqlmodels.tables.Twitterfollowers;
import appengine.parser.mysqlmodels.tables.Ubereats;
import appengine.parser.mysqlmodels.tables.Weareswiggy;
import appengine.parser.mysqlmodels.tables.records.CoinstatusRecord;
import appengine.parser.mysqlmodels.tables.records.FetcherRecord;
import appengine.parser.mysqlmodels.tables.records.FetcherhistoryRecord;
import appengine.parser.mysqlmodels.tables.records.FromfbpageRecord;
import appengine.parser.mysqlmodels.tables.records.FromfbpageTofbpageRecord;
import appengine.parser.mysqlmodels.tables.records.InstagramfollowersRecord;
import appengine.parser.mysqlmodels.tables.records.InstagramfollowersupdateRecord;
import appengine.parser.mysqlmodels.tables.records.InstagramlastfetchRecord;
import appengine.parser.mysqlmodels.tables.records.InstagramunfollowersupdateRecord;
import appengine.parser.mysqlmodels.tables.records.OptimalupdateRecord;
import appengine.parser.mysqlmodels.tables.records.PromotefbpageRecord;
import appengine.parser.mysqlmodels.tables.records.SockettradearbitaryRecord;
import appengine.parser.mysqlmodels.tables.records.SwiggyeventsRecord;
import appengine.parser.mysqlmodels.tables.records.TwitterfollowersRecord;
import appengine.parser.mysqlmodels.tables.records.UbereatsRecord;
import appengine.parser.mysqlmodels.tables.records.WeareswiggyRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>6txKRsiwk3</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<InstagramfollowersRecord, Integer> IDENTITY_INSTAGRAMFOLLOWERS = Identities0.IDENTITY_INSTAGRAMFOLLOWERS;
    public static final Identity<SwiggyeventsRecord, Integer> IDENTITY_SWIGGYEVENTS = Identities0.IDENTITY_SWIGGYEVENTS;
    public static final Identity<TwitterfollowersRecord, Integer> IDENTITY_TWITTERFOLLOWERS = Identities0.IDENTITY_TWITTERFOLLOWERS;
    public static final Identity<UbereatsRecord, Integer> IDENTITY_UBEREATS = Identities0.IDENTITY_UBEREATS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CoinstatusRecord> KEY_COINSTATUS_COINSTATUS_LABEL_MARKET_PK = UniqueKeys0.KEY_COINSTATUS_COINSTATUS_LABEL_MARKET_PK;
    public static final UniqueKey<FetcherRecord> KEY_FETCHER_PRIMARY = UniqueKeys0.KEY_FETCHER_PRIMARY;
    public static final UniqueKey<FetcherhistoryRecord> KEY_FETCHERHISTORY_PRIMARY = UniqueKeys0.KEY_FETCHERHISTORY_PRIMARY;
    public static final UniqueKey<FromfbpageRecord> KEY_FROMFBPAGE_PRIMARY = UniqueKeys0.KEY_FROMFBPAGE_PRIMARY;
    public static final UniqueKey<FromfbpageTofbpageRecord> KEY_FROMFBPAGE_TOFBPAGE_PRIMARY = UniqueKeys0.KEY_FROMFBPAGE_TOFBPAGE_PRIMARY;
    public static final UniqueKey<InstagramfollowersRecord> KEY_INSTAGRAMFOLLOWERS_PRIMARY = UniqueKeys0.KEY_INSTAGRAMFOLLOWERS_PRIMARY;
    public static final UniqueKey<InstagramfollowersupdateRecord> KEY_INSTAGRAMFOLLOWERSUPDATE_PRIMARY = UniqueKeys0.KEY_INSTAGRAMFOLLOWERSUPDATE_PRIMARY;
    public static final UniqueKey<InstagramlastfetchRecord> KEY_INSTAGRAMLASTFETCH_PRIMARY = UniqueKeys0.KEY_INSTAGRAMLASTFETCH_PRIMARY;
    public static final UniqueKey<InstagramunfollowersupdateRecord> KEY_INSTAGRAMUNFOLLOWERSUPDATE_INSTAGRAMUNFOLLOWERSUPDATE_PAGENAME_FROM_USER_NAME_PK = UniqueKeys0.KEY_INSTAGRAMUNFOLLOWERSUPDATE_INSTAGRAMUNFOLLOWERSUPDATE_PAGENAME_FROM_USER_NAME_PK;
    public static final UniqueKey<OptimalupdateRecord> KEY_OPTIMALUPDATE_PRIMARY = UniqueKeys0.KEY_OPTIMALUPDATE_PRIMARY;
    public static final UniqueKey<PromotefbpageRecord> KEY_PROMOTEFBPAGE_PRIMARY = UniqueKeys0.KEY_PROMOTEFBPAGE_PRIMARY;
    public static final UniqueKey<SockettradearbitaryRecord> KEY_SOCKETTRADEARBITARY_SOCKETTRADEARBITARY_COINLABEL_MARKET_TRADETYPE_CREATEDTIME_PK = UniqueKeys0.KEY_SOCKETTRADEARBITARY_SOCKETTRADEARBITARY_COINLABEL_MARKET_TRADETYPE_CREATEDTIME_PK;
    public static final UniqueKey<SwiggyeventsRecord> KEY_SWIGGYEVENTS_PRIMARY = UniqueKeys0.KEY_SWIGGYEVENTS_PRIMARY;
    public static final UniqueKey<TwitterfollowersRecord> KEY_TWITTERFOLLOWERS_PRIMARY = UniqueKeys0.KEY_TWITTERFOLLOWERS_PRIMARY;
    public static final UniqueKey<TwitterfollowersRecord> KEY_TWITTERFOLLOWERS_TWITTERFOLLOWERS_USER_ID_UINDEX = UniqueKeys0.KEY_TWITTERFOLLOWERS_TWITTERFOLLOWERS_USER_ID_UINDEX;
    public static final UniqueKey<UbereatsRecord> KEY_UBEREATS_UBEREATS_UUID_PK = UniqueKeys0.KEY_UBEREATS_UBEREATS_UUID_PK;
    public static final UniqueKey<UbereatsRecord> KEY_UBEREATS_PRIMARY = UniqueKeys0.KEY_UBEREATS_PRIMARY;
    public static final UniqueKey<WeareswiggyRecord> KEY_WEARESWIGGY_WEARESWIGGY_ISUNIQUE_UINDEX = UniqueKeys0.KEY_WEARESWIGGY_WEARESWIGGY_ISUNIQUE_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<InstagramfollowersRecord, Integer> IDENTITY_INSTAGRAMFOLLOWERS = createIdentity(Instagramfollowers.INSTAGRAMFOLLOWERS, Instagramfollowers.INSTAGRAMFOLLOWERS.ID);
        public static Identity<SwiggyeventsRecord, Integer> IDENTITY_SWIGGYEVENTS = createIdentity(Swiggyevents.SWIGGYEVENTS, Swiggyevents.SWIGGYEVENTS.ID);
        public static Identity<TwitterfollowersRecord, Integer> IDENTITY_TWITTERFOLLOWERS = createIdentity(Twitterfollowers.TWITTERFOLLOWERS, Twitterfollowers.TWITTERFOLLOWERS.ID);
        public static Identity<UbereatsRecord, Integer> IDENTITY_UBEREATS = createIdentity(Ubereats.UBEREATS, Ubereats.UBEREATS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CoinstatusRecord> KEY_COINSTATUS_COINSTATUS_LABEL_MARKET_PK = createUniqueKey(Coinstatus.COINSTATUS, "KEY_coinstatus_coinstatus_label_market_pk", Coinstatus.COINSTATUS.LABEL, Coinstatus.COINSTATUS.MARKET);
        public static final UniqueKey<FetcherRecord> KEY_FETCHER_PRIMARY = createUniqueKey(Fetcher.FETCHER, "KEY_fetcher_PRIMARY", Fetcher.FETCHER.COIN, Fetcher.FETCHER.MARKET);
        public static final UniqueKey<FetcherhistoryRecord> KEY_FETCHERHISTORY_PRIMARY = createUniqueKey(Fetcherhistory.FETCHERHISTORY, "KEY_fetcherhistory_PRIMARY", Fetcherhistory.FETCHERHISTORY.COIN, Fetcherhistory.FETCHERHISTORY.MARKET, Fetcherhistory.FETCHERHISTORY.TIME);
        public static final UniqueKey<FromfbpageRecord> KEY_FROMFBPAGE_PRIMARY = createUniqueKey(Fromfbpage.FROMFBPAGE, "KEY_fromfbpage_PRIMARY", Fromfbpage.FROMFBPAGE.FROM_PAGE_ID);
        public static final UniqueKey<FromfbpageTofbpageRecord> KEY_FROMFBPAGE_TOFBPAGE_PRIMARY = createUniqueKey(FromfbpageTofbpage.FROMFBPAGE_TOFBPAGE, "KEY_fromfbpage_tofbpage_PRIMARY", FromfbpageTofbpage.FROMFBPAGE_TOFBPAGE.FROM_PAGE_ID, FromfbpageTofbpage.FROMFBPAGE_TOFBPAGE.TO_PAGE_ID);
        public static final UniqueKey<InstagramfollowersRecord> KEY_INSTAGRAMFOLLOWERS_PRIMARY = createUniqueKey(Instagramfollowers.INSTAGRAMFOLLOWERS, "KEY_instagramfollowers_PRIMARY", Instagramfollowers.INSTAGRAMFOLLOWERS.ID);
        public static final UniqueKey<InstagramfollowersupdateRecord> KEY_INSTAGRAMFOLLOWERSUPDATE_PRIMARY = createUniqueKey(Instagramfollowersupdate.INSTAGRAMFOLLOWERSUPDATE, "KEY_instagramfollowersupdate_PRIMARY", Instagramfollowersupdate.INSTAGRAMFOLLOWERSUPDATE.FROM_USER_NAME, Instagramfollowersupdate.INSTAGRAMFOLLOWERSUPDATE.PAGENAME);
        public static final UniqueKey<InstagramlastfetchRecord> KEY_INSTAGRAMLASTFETCH_PRIMARY = createUniqueKey(Instagramlastfetch.INSTAGRAMLASTFETCH, "KEY_instagramlastfetch_PRIMARY", Instagramlastfetch.INSTAGRAMLASTFETCH.PAGENAME);
        public static final UniqueKey<InstagramunfollowersupdateRecord> KEY_INSTAGRAMUNFOLLOWERSUPDATE_INSTAGRAMUNFOLLOWERSUPDATE_PAGENAME_FROM_USER_NAME_PK = createUniqueKey(Instagramunfollowersupdate.INSTAGRAMUNFOLLOWERSUPDATE, "KEY_instagramunfollowersupdate_instagramunfollowersupdate_pagename_from_user_name_pk", Instagramunfollowersupdate.INSTAGRAMUNFOLLOWERSUPDATE.PAGENAME, Instagramunfollowersupdate.INSTAGRAMUNFOLLOWERSUPDATE.FROM_USER_NAME);
        public static final UniqueKey<OptimalupdateRecord> KEY_OPTIMALUPDATE_PRIMARY = createUniqueKey(Optimalupdate.OPTIMALUPDATE, "KEY_optimalupdate_PRIMARY", Optimalupdate.OPTIMALUPDATE.OPERATION);
        public static final UniqueKey<PromotefbpageRecord> KEY_PROMOTEFBPAGE_PRIMARY = createUniqueKey(Promotefbpage.PROMOTEFBPAGE, "KEY_promotefbpage_PRIMARY", Promotefbpage.PROMOTEFBPAGE.FB_PAGE_ID);
        public static final UniqueKey<SockettradearbitaryRecord> KEY_SOCKETTRADEARBITARY_SOCKETTRADEARBITARY_COINLABEL_MARKET_TRADETYPE_CREATEDTIME_PK = createUniqueKey(Sockettradearbitary.SOCKETTRADEARBITARY, "KEY_sockettradearbitary_sockettradearbitary_coinlabel_market_tradetype_createdtime_pk", Sockettradearbitary.SOCKETTRADEARBITARY.COINLABEL, Sockettradearbitary.SOCKETTRADEARBITARY.MARKET, Sockettradearbitary.SOCKETTRADEARBITARY.TRADETYPE, Sockettradearbitary.SOCKETTRADEARBITARY.CREATEDTIME);
        public static final UniqueKey<SwiggyeventsRecord> KEY_SWIGGYEVENTS_PRIMARY = createUniqueKey(Swiggyevents.SWIGGYEVENTS, "KEY_swiggyevents_PRIMARY", Swiggyevents.SWIGGYEVENTS.ID);
        public static final UniqueKey<TwitterfollowersRecord> KEY_TWITTERFOLLOWERS_PRIMARY = createUniqueKey(Twitterfollowers.TWITTERFOLLOWERS, "KEY_twitterfollowers_PRIMARY", Twitterfollowers.TWITTERFOLLOWERS.ID);
        public static final UniqueKey<TwitterfollowersRecord> KEY_TWITTERFOLLOWERS_TWITTERFOLLOWERS_USER_ID_UINDEX = createUniqueKey(Twitterfollowers.TWITTERFOLLOWERS, "KEY_twitterfollowers_twitterfollowers_user_id_uindex", Twitterfollowers.TWITTERFOLLOWERS.USER_ID);
        public static final UniqueKey<UbereatsRecord> KEY_UBEREATS_UBEREATS_UUID_PK = createUniqueKey(Ubereats.UBEREATS, "KEY_ubereats_ubereats_uuid_pk", Ubereats.UBEREATS.UUID);
        public static final UniqueKey<UbereatsRecord> KEY_UBEREATS_PRIMARY = createUniqueKey(Ubereats.UBEREATS, "KEY_ubereats_PRIMARY", Ubereats.UBEREATS.ID);
        public static final UniqueKey<WeareswiggyRecord> KEY_WEARESWIGGY_WEARESWIGGY_ISUNIQUE_UINDEX = createUniqueKey(Weareswiggy.WEARESWIGGY, "KEY_weareswiggy_weareswiggy_isunique_uindex", Weareswiggy.WEARESWIGGY.ISUNIQUE);
    }
}
