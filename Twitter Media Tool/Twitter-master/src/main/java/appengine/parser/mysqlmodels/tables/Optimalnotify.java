/**
 * This class is generated by jOOQ
 */
package appengine.parser.mysqlmodels.tables;


import appengine.parser.mysqlmodels._6txkrsiwk3;
import appengine.parser.mysqlmodels.enums.OptimalnotifyNotifytype;
import appengine.parser.mysqlmodels.tables.records.OptimalnotifyRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Optimalnotify extends TableImpl<OptimalnotifyRecord> {

    private static final long serialVersionUID = -294382193;

    /**
     * The reference instance of <code>6txKRsiwk3.optimalnotify</code>
     */
    public static final Optimalnotify OPTIMALNOTIFY = new Optimalnotify();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OptimalnotifyRecord> getRecordType() {
        return OptimalnotifyRecord.class;
    }

    /**
     * The column <code>6txKRsiwk3.optimalnotify.coinlabel</code>.
     */
    public final TableField<OptimalnotifyRecord, String> COINLABEL = createField("coinlabel", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.time</code>.
     */
    public final TableField<OptimalnotifyRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.profit</code>.
     */
    public final TableField<OptimalnotifyRecord, Double> PROFIT = createField("profit", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.frommarket</code>.
     */
    public final TableField<OptimalnotifyRecord, String> FROMMARKET = createField("frommarket", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.tomarket</code>.
     */
    public final TableField<OptimalnotifyRecord, String> TOMARKET = createField("tomarket", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.notifytype</code>.
     */
    public final TableField<OptimalnotifyRecord, OptimalnotifyNotifytype> NOTIFYTYPE = createField("notifytype", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(appengine.parser.mysqlmodels.enums.OptimalnotifyNotifytype.class), this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.buyprice</code>.
     */
    public final TableField<OptimalnotifyRecord, Double> BUYPRICE = createField("buyprice", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>6txKRsiwk3.optimalnotify.sellprice</code>.
     */
    public final TableField<OptimalnotifyRecord, Double> SELLPRICE = createField("sellprice", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>6txKRsiwk3.optimalnotify</code> table reference
     */
    public Optimalnotify() {
        this("optimalnotify", null);
    }

    /**
     * Create an aliased <code>6txKRsiwk3.optimalnotify</code> table reference
     */
    public Optimalnotify(String alias) {
        this(alias, OPTIMALNOTIFY);
    }

    private Optimalnotify(String alias, Table<OptimalnotifyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Optimalnotify(String alias, Table<OptimalnotifyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return _6txkrsiwk3._6TXKRSIWK3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Optimalnotify as(String alias) {
        return new Optimalnotify(alias, this);
    }

    /**
     * Rename this table
     */
    public Optimalnotify rename(String name) {
        return new Optimalnotify(name, null);
    }
}
