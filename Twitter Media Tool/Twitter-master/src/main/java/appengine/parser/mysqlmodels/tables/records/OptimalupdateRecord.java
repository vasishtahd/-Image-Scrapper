/**
 * This class is generated by jOOQ
 */
package appengine.parser.mysqlmodels.tables.records;


import appengine.parser.mysqlmodels.enums.OptimalupdateOperation;
import appengine.parser.mysqlmodels.tables.Optimalupdate;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OptimalupdateRecord extends UpdatableRecordImpl<OptimalupdateRecord> implements Record3<OptimalupdateOperation, Timestamp, Integer> {

    private static final long serialVersionUID = -576158452;

    /**
     * Setter for <code>6txKRsiwk3.optimalupdate.operation</code>.
     */
    public void setOperation(OptimalupdateOperation value) {
        set(0, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalupdate.operation</code>.
     */
    public OptimalupdateOperation getOperation() {
        return (OptimalupdateOperation) get(0);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalupdate.updatedtime</code>.
     */
    public void setUpdatedtime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalupdate.updatedtime</code>.
     */
    public Timestamp getUpdatedtime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalupdate.dummy</code>.
     */
    public void setDummy(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalupdate.dummy</code>.
     */
    public Integer getDummy() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<OptimalupdateOperation> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<OptimalupdateOperation, Timestamp, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<OptimalupdateOperation, Timestamp, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OptimalupdateOperation> field1() {
        return Optimalupdate.OPTIMALUPDATE.OPERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Optimalupdate.OPTIMALUPDATE.UPDATEDTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Optimalupdate.OPTIMALUPDATE.DUMMY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalupdateOperation value1() {
        return getOperation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getUpdatedtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDummy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalupdateRecord value1(OptimalupdateOperation value) {
        setOperation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalupdateRecord value2(Timestamp value) {
        setUpdatedtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalupdateRecord value3(Integer value) {
        setDummy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalupdateRecord values(OptimalupdateOperation value1, Timestamp value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OptimalupdateRecord
     */
    public OptimalupdateRecord() {
        super(Optimalupdate.OPTIMALUPDATE);
    }

    /**
     * Create a detached, initialised OptimalupdateRecord
     */
    public OptimalupdateRecord(OptimalupdateOperation operation, Timestamp updatedtime, Integer dummy) {
        super(Optimalupdate.OPTIMALUPDATE);

        set(0, operation);
        set(1, updatedtime);
        set(2, dummy);
    }
}
