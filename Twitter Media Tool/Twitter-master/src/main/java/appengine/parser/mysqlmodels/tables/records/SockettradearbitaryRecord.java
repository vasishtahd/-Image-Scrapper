/**
 * This class is generated by jOOQ
 */
package appengine.parser.mysqlmodels.tables.records;


import appengine.parser.mysqlmodels.enums.SockettradearbitaryTradetype;
import appengine.parser.mysqlmodels.tables.Sockettradearbitary;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SockettradearbitaryRecord extends TableRecordImpl<SockettradearbitaryRecord> implements Record13<String, SockettradearbitaryTradetype, Double, Double, Timestamp, String, Double, Double, Byte, Double, Timestamp, Double, String> {

    private static final long serialVersionUID = -100848355;

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.coinlabel</code>.
     */
    public void setCoinlabel(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.coinlabel</code>.
     */
    public String getCoinlabel() {
        return (String) get(0);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.tradetype</code>.
     */
    public void setTradetype(SockettradearbitaryTradetype value) {
        set(1, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.tradetype</code>.
     */
    public SockettradearbitaryTradetype getTradetype() {
        return (SockettradearbitaryTradetype) get(1);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.buyprice</code>.
     */
    public void setBuyprice(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.buyprice</code>.
     */
    public Double getBuyprice() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.sellprice</code>.
     */
    public void setSellprice(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.sellprice</code>.
     */
    public Double getSellprice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.createdtime</code>.
     */
    public void setCreatedtime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.createdtime</code>.
     */
    public Timestamp getCreatedtime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.market</code>.
     */
    public void setMarket(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.market</code>.
     */
    public String getMarket() {
        return (String) get(5);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.amount</code>.
     */
    public void setAmount(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.arbitarysellprice</code>.
     */
    public void setArbitarysellprice(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.arbitarysellprice</code>.
     */
    public Double getArbitarysellprice() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.iscompleted</code>.
     */
    public void setIscompleted(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.iscompleted</code>.
     */
    public Byte getIscompleted() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.updatedarbitarysellprice</code>.
     */
    public void setUpdatedarbitarysellprice(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.updatedarbitarysellprice</code>.
     */
    public Double getUpdatedarbitarysellprice() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.updatedtime</code>.
     */
    public void setUpdatedtime(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.updatedtime</code>.
     */
    public Timestamp getUpdatedtime() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.updatedsellprice</code>.
     */
    public void setUpdatedsellprice(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.updatedsellprice</code>.
     */
    public Double getUpdatedsellprice() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>6txKRsiwk3.sockettradearbitary.order_id</code>.
     */
    public void setOrderId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.sockettradearbitary.order_id</code>.
     */
    public String getOrderId() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, SockettradearbitaryTradetype, Double, Double, Timestamp, String, Double, Double, Byte, Double, Timestamp, Double, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, SockettradearbitaryTradetype, Double, Double, Timestamp, String, Double, Double, Byte, Double, Timestamp, Double, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.COINLABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<SockettradearbitaryTradetype> field2() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.TRADETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.BUYPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.SELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.CREATEDTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.MARKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.ARBITARYSELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.ISCOMPLETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.UPDATEDARBITARYSELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.UPDATEDTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field12() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.UPDATEDSELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Sockettradearbitary.SOCKETTRADEARBITARY.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCoinlabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryTradetype value2() {
        return getTradetype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getBuyprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getSellprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMarket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getArbitarysellprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIscompleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getUpdatedarbitarysellprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getUpdatedtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value12() {
        return getUpdatedsellprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value1(String value) {
        setCoinlabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value2(SockettradearbitaryTradetype value) {
        setTradetype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value3(Double value) {
        setBuyprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value4(Double value) {
        setSellprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value5(Timestamp value) {
        setCreatedtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value6(String value) {
        setMarket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value7(Double value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value8(Double value) {
        setArbitarysellprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value9(Byte value) {
        setIscompleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value10(Double value) {
        setUpdatedarbitarysellprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value11(Timestamp value) {
        setUpdatedtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value12(Double value) {
        setUpdatedsellprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord value13(String value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SockettradearbitaryRecord values(String value1, SockettradearbitaryTradetype value2, Double value3, Double value4, Timestamp value5, String value6, Double value7, Double value8, Byte value9, Double value10, Timestamp value11, Double value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SockettradearbitaryRecord
     */
    public SockettradearbitaryRecord() {
        super(Sockettradearbitary.SOCKETTRADEARBITARY);
    }

    /**
     * Create a detached, initialised SockettradearbitaryRecord
     */
    public SockettradearbitaryRecord(String coinlabel, SockettradearbitaryTradetype tradetype, Double buyprice, Double sellprice, Timestamp createdtime, String market, Double amount, Double arbitarysellprice, Byte iscompleted, Double updatedarbitarysellprice, Timestamp updatedtime, Double updatedsellprice, String orderId) {
        super(Sockettradearbitary.SOCKETTRADEARBITARY);

        set(0, coinlabel);
        set(1, tradetype);
        set(2, buyprice);
        set(3, sellprice);
        set(4, createdtime);
        set(5, market);
        set(6, amount);
        set(7, arbitarysellprice);
        set(8, iscompleted);
        set(9, updatedarbitarysellprice);
        set(10, updatedtime);
        set(11, updatedsellprice);
        set(12, orderId);
    }
}
