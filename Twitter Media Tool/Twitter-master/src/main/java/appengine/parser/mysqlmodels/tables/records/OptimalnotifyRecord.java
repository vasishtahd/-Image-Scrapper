/**
 * This class is generated by jOOQ
 */
package appengine.parser.mysqlmodels.tables.records;


import appengine.parser.mysqlmodels.enums.OptimalnotifyNotifytype;
import appengine.parser.mysqlmodels.tables.Optimalnotify;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OptimalnotifyRecord extends TableRecordImpl<OptimalnotifyRecord> implements Record8<String, Timestamp, Double, String, String, OptimalnotifyNotifytype, Double, Double> {

    private static final long serialVersionUID = -2037446396;

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.coinlabel</code>.
     */
    public void setCoinlabel(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.coinlabel</code>.
     */
    public String getCoinlabel() {
        return (String) get(0);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.time</code>.
     */
    public void setTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.time</code>.
     */
    public Timestamp getTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.profit</code>.
     */
    public void setProfit(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.profit</code>.
     */
    public Double getProfit() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.frommarket</code>.
     */
    public void setFrommarket(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.frommarket</code>.
     */
    public String getFrommarket() {
        return (String) get(3);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.tomarket</code>.
     */
    public void setTomarket(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.tomarket</code>.
     */
    public String getTomarket() {
        return (String) get(4);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.notifytype</code>.
     */
    public void setNotifytype(OptimalnotifyNotifytype value) {
        set(5, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.notifytype</code>.
     */
    public OptimalnotifyNotifytype getNotifytype() {
        return (OptimalnotifyNotifytype) get(5);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.buyprice</code>.
     */
    public void setBuyprice(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.buyprice</code>.
     */
    public Double getBuyprice() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>6txKRsiwk3.optimalnotify.sellprice</code>.
     */
    public void setSellprice(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>6txKRsiwk3.optimalnotify.sellprice</code>.
     */
    public Double getSellprice() {
        return (Double) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Timestamp, Double, String, String, OptimalnotifyNotifytype, Double, Double> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Timestamp, Double, String, String, OptimalnotifyNotifytype, Double, Double> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Optimalnotify.OPTIMALNOTIFY.COINLABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Optimalnotify.OPTIMALNOTIFY.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Optimalnotify.OPTIMALNOTIFY.PROFIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Optimalnotify.OPTIMALNOTIFY.FROMMARKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Optimalnotify.OPTIMALNOTIFY.TOMARKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OptimalnotifyNotifytype> field6() {
        return Optimalnotify.OPTIMALNOTIFY.NOTIFYTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Optimalnotify.OPTIMALNOTIFY.BUYPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Optimalnotify.OPTIMALNOTIFY.SELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCoinlabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getProfit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFrommarket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTomarket();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyNotifytype value6() {
        return getNotifytype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getBuyprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getSellprice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value1(String value) {
        setCoinlabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value2(Timestamp value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value3(Double value) {
        setProfit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value4(String value) {
        setFrommarket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value5(String value) {
        setTomarket(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value6(OptimalnotifyNotifytype value) {
        setNotifytype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value7(Double value) {
        setBuyprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord value8(Double value) {
        setSellprice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OptimalnotifyRecord values(String value1, Timestamp value2, Double value3, String value4, String value5, OptimalnotifyNotifytype value6, Double value7, Double value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OptimalnotifyRecord
     */
    public OptimalnotifyRecord() {
        super(Optimalnotify.OPTIMALNOTIFY);
    }

    /**
     * Create a detached, initialised OptimalnotifyRecord
     */
    public OptimalnotifyRecord(String coinlabel, Timestamp time, Double profit, String frommarket, String tomarket, OptimalnotifyNotifytype notifytype, Double buyprice, Double sellprice) {
        super(Optimalnotify.OPTIMALNOTIFY);

        set(0, coinlabel);
        set(1, time);
        set(2, profit);
        set(3, frommarket);
        set(4, tomarket);
        set(5, notifytype);
        set(6, buyprice);
        set(7, sellprice);
    }
}
